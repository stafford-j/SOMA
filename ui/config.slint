import {
    GridBox, LineEdit, Button, VerticalBox
} from "std-widgets.slint";

export global ConfigData {
    callback save_config(string, string, string);
    callback change_password(string, string);
    callback check_password(string, string);
    callback view_seed_phrase(string);
    callback unlock_password(string);
    callback lock_password();
    in-out property <string> new_password: "";
    in-out property <string> current_password: "";
    in-out property <int> password_timeout: 0;
    in-out property <string> download_path: "";
    in-out property <string> data_path: "";
    in-out property <string> seed_phrase: "";
    in-out property <bool> password_correct: false;
    in-out property <string> password_change_status: "";
    in-out property <bool> password_match: false;
    in-out property <string> password_status: "";
    in-out property <string> change_password_status: "";
    in-out property <bool> timer_running: false;
}

export component ConfigView inherits VerticalBox {
    
    property <int> timeout: { ConfigData.password_timeout };
    Timer {
        interval: 1s;
        running: { ConfigData.timer_running };
        triggered() => {
            timeout -= 1;
            if (timeout == 0) {
                self.running = false;
                ConfigData.current_password = "";
                ConfigData.new_password = "";
                ConfigData.password_correct = false;
                ConfigData.seed_phrase = "";
                ConfigData.password_status = "";
                ConfigData.change_password_status = "";
                ConfigData.lock_password();
            }
        }
    }

    // Public properties
    VerticalLayout {
        HorizontalLayout {
            Text {
                text: "Downloads Path:";
                vertical-alignment: center;
                horizontal-alignment: left;
            }
            HorizontalLayout {
                le_download_path := LineEdit {
                    //accepted => { root.reload-manifest(le_manifest.text); }
                    text: ConfigData.download_path;
                    horizontal_stretch: 1;
                }
            }
        }
        HorizontalLayout {
            Text {
                text: "Colony Data Path:";
                vertical-alignment: center;
                horizontal-alignment: left;
            }
            HorizontalLayout {
                le_data_path := LineEdit {
                    //accepted => { root.reload-manifest(le_manifest.text); }
                    enabled: false;
                    text: ConfigData.data_path;
                    horizontal_stretch: 1;
                }
            }
        }
        HorizontalLayout {
            Text {
                text: "Password Timeout:";
                vertical-alignment: center;
                horizontal-alignment: left;
            }
            HorizontalLayout {
                le_password_timeout := LineEdit {
                    //accepted => { root.reload-manifest(le_manifest.text); }
                    input-type: number;
                    text: ConfigData.password_timeout;
                }
            }
        }
    }
    HorizontalLayout {
        Rectangle {
            vertical_stretch: 1;
            horizontal_stretch: 1;
        }
    }
    HorizontalLayout {
        Button {
            text: "Save";
            clicked => { ConfigData.save_config(le_download_path.text, le_data_path.text, le_password_timeout.text); }
        }
    }
    VerticalLayout {
        if ConfigData.password_correct: VerticalLayout {
            HorizontalLayout {
                Text {
                text: "Change Password:";
                vertical-alignment: center;
                horizontal-alignment: left;
                }
                le_password1 := LineEdit {
                    text: { ConfigData.new_password };
                    horizontal_stretch: 1;
                    input-type: password;
                    height: 30px;
                    edited(text) => {
                        ConfigData.new_password = text;
                        ConfigData.check_password(ConfigData.new_password, le_password2.text);
                    }
                }
                le_password2 := LineEdit {
                    horizontal_stretch: 1;
                    input-type: password;
                    height: 30px;
                    edited(text) => {
                        ConfigData.check_password(ConfigData.new_password, le_password2.text);
                    }
                }
                Button {
                    text: "Change";
                    enabled: { ConfigData.password_match }
                    clicked => { ConfigData.change_password(ConfigData.current_password, ConfigData.new_password); 
                                 le_password1.text = "";
                                 le_password2.text = ""; }
                }
                Text {
                    text: { ConfigData.change_password_status }
                }
            }
            HorizontalLayout {
                Text {
                    text: {ConfigData.password_change_status};
                    vertical-alignment: center;
                    horizontal-alignment: center;
                }
            }

            HorizontalLayout {
                Text {
                    text: "Enter password again to view seed phrase:";
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
                le_password_view_seed := LineEdit {
                    horizontal_stretch: 1;
                    placeholder_text: "Password";
                    input-type: password;
                }
                Button {
                    text: "View Seed Phrase";
                    clicked => { ConfigData.view_seed_phrase(le_password_view_seed.text);
                                 le_password_view_seed.text = ""; }
                }
            }
            Text {
                text: { ConfigData.seed_phrase };
                vertical-alignment: center;
                horizontal-alignment: left;
            }
        }
        if !ConfigData.password_correct: VerticalLayout {
            HorizontalLayout {
                Text {
                    text: "Enter current password to change the password or view the seed phrase:";
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
                LineEdit {
                    text: { ConfigData.current_password };
                    horizontal_stretch: 1;
                    placeholder_text: "Password";
                    input-type: password;
                    edited(text) => {
                        ConfigData.current_password = text;
                    }
                    accepted(text) => {ConfigData.unlock_password(text);}
                }
                Button {
                    text: "Submit";
                    clicked => { ConfigData.unlock_password(ConfigData.current_password);
                                 if ConfigData.password_correct {
                                     ConfigData.timer_running = true;
                                 }
                                }
                }
                Text {
                    text: { ConfigData.password_status };
                    vertical-alignment: center;
                    horizontal-alignment: center;
                }
            }

        }
    }
}
