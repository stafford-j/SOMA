import {
    VerticalBox, LineEdit, Button
} from "std-widgets.slint";

export global WalletData {
    callback import_wallet(string);
    in-out property <string> wallet_address: "";
    in-out property <string> eth_balance: "";
    in-out property <string> ant_balance: "";
}

import {
    ConfigData
} from "config.slint";

export component WalletView inherits VerticalBox {
    alignment: LayoutAlignment.center;
    spacing: 10px;
    visible: true;
    if ConfigData.password_correct: VerticalLayout {
        GridLayout {
            Row {
                Text {
                    text: "Address:";
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
                Text {
                    text: { WalletData.wallet_address };
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
            }
            Row {
                Text {
                    text: "ETH Balance:";
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
                Text {
                    text: { WalletData.eth_balance };
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
            }
            Row {
                Text {
                    text: "ANT Balance:";
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
                Text {
                    text: { WalletData.ant_balance };
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
            }
        }
    
        Rectangle {
            vertical_stretch: 1;
            horizontal_stretch: 1;
        }
        VerticalLayout {
            HorizontalLayout {
                Text {
                    text: "Import private key:";
                    vertical-alignment: center;
                    horizontal-alignment: left;
                }
                le_private_key := LineEdit {
                    horizontal_stretch: 1;
                    placeholder_text: "Private key";
                }
                Button {
                    text: "Import";
                    //clicked => { root.save(); }
                }
            }
        }
    }
    if !ConfigData.password_correct: VerticalLayout {
        alignment: center;
            Text {
                text: "Enter password to unlock wallet:";
                vertical-alignment: center;
                horizontal-alignment: center;
            }
            LineEdit {
                text: { ConfigData.current_password };
                height: 30px;
                horizontal_stretch: 1;
                placeholder_text: "Password";
                input-type: password;
                edited(text) => {
                    ConfigData.current_password = text;
                }
                accepted(text) => {ConfigData.unlock_password(text);}
            }
            Button {
                text: "Submit";
                height: 30px;
                clicked => { ConfigData.unlock_password(ConfigData.current_password);
                             if ConfigData.password_correct {
                                 ConfigData.timer_running = true;
                             }
                            }
            }
            Text {
                text: { ConfigData.password_status };
                vertical-alignment: center;
                horizontal-alignment: center;
            }
    }
}
